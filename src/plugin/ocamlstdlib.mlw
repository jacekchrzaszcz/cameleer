module OCamlStdLib

  use export int.Int
  use export mach.int.Int
  use export int.MinMax
  use export list.List
  (* use export list.Length *)
  use export list.Append
  (* use export list.Reverse *)
  use export ocaml.Exceptions
  use export option.Option
  use export ref.Ref
  use export ref.Refint

  scope List

    use export list.List
    use import list.Reverse as R

    let rec function rev (l: list 'a) : list 'a =
      R.reverse l

  end

  scope Array
    use import array.Array as A

    let rec function length (a: array 'a) : int =
      A.length a

    function get (a: array 'a) (i: int) : 'a = a[i]

    val get (a: array 'a) (i: int) : 'a
      requires { 0 <= i < length a }
      ensures  { result = get a i }
  end

end