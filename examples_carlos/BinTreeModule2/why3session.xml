<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="BinTreeModule2.ml"/>
<theory name="BinTreeModule2">
 <goal name="BinTree.occ_nonneg&#39;vc" expl="VC for occ_nonneg">
 <proof prover="0"><result status="valid" time="0.02" steps="44"/></proof>
 </goal>
 <goal name="BinTree.height_nonneg&#39;vc" expl="VC for height_nonneg">
 <transf name="split_vc" >
  <goal name="height_nonneg&#39;vc.0" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="height_nonneg&#39;vc.1" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.height&#39;vc" expl="VC for height">
 <transf name="split_vc" >
  <goal name="height&#39;vc.0" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="height&#39;vc.1" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.occ_uniq2&#39;vc" expl="VC for occ_uniq2">
 <proof prover="0"><result status="valid" time="1.55" steps="5095"/></proof>
 </goal>
 <goal name="BinTree.min_tree&#39;vc" expl="VC for min_tree">
 <transf name="split_vc" >
  <goal name="min_tree&#39;vc.0" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="min_tree&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="min_tree&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="min_tree&#39;vc.3" expl="postcondition">
  <transf name="split_vc" >
   <goal name="min_tree&#39;vc.3.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.70" steps="1078"/></proof>
   </goal>
   <goal name="min_tree&#39;vc.3.1" expl="postcondition">
   <transf name="inline_goal" >
    <goal name="min_tree&#39;vc.3.1.0" expl="postcondition">
    <transf name="split_all_full" >
     <goal name="min_tree&#39;vc.3.1.0.0" expl="VC for min_tree">
     <proof prover="1"><result status="valid" time="0.18" steps="21714"/></proof>
     </goal>
     <goal name="min_tree&#39;vc.3.1.0.1" expl="VC for min_tree">
     <transf name="split_vc" >
      <goal name="min_tree&#39;vc.3.1.0.1.0" expl="VC for min_tree">
      <proof prover="0"><result status="valid" time="1.66" steps="2023"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.max_tree&#39;vc" expl="VC for max_tree">
 <transf name="split_vc" >
  <goal name="max_tree&#39;vc.0" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="max_tree&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="max_tree&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="max_tree&#39;vc.3" expl="postcondition">
  <transf name="split_vc" >
   <goal name="max_tree&#39;vc.3.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.31" steps="782"/></proof>
   </goal>
   <goal name="max_tree&#39;vc.3.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="5.62" steps="5026"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.is_minimum_min&#39;vc" expl="VC for is_minimum_min">
 </goal>
 <goal name="BinTree.is_maximum_max&#39;vc" expl="VC for is_maximum_max">
 <proof prover="0"><result status="valid" time="0.03" steps="187"/></proof>
 </goal>
 <goal name="BinTree.create&#39;vc" expl="VC for create">
 <transf name="split_vc" >
  <goal name="create&#39;vc.0" expl="postcondition">
  <transf name="split_vc" >
   <goal name="create&#39;vc.0.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.05" steps="196"/></proof>
   </goal>
   <goal name="create&#39;vc.0.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.05" steps="199"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create&#39;vc.1" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.06" steps="403"/></proof>
  </goal>
  <goal name="create&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="130"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.bal&#39;vc" expl="VC for bal">
 </goal>
 <goal name="BinTree.remove_min_elt&#39;vc" expl="VC for remove_min_elt">
 </goal>
 <goal name="BinTree.merge&#39;vc" expl="VC for merge">
 </goal>
 <goal name="BinTree.mem&#39;vc" expl="VC for mem">
 <proof prover="0"><result status="valid" time="0.15" steps="972"/></proof>
 </goal>
 <goal name="BinTree.add&#39;vc" expl="VC for add">
 </goal>
 <goal name="BinTree.remove&#39;vc" expl="VC for remove">
 </goal>
</theory>
</file>
</why3session>
