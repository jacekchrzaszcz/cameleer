<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="6000"/>
<prover id="1" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="6000"/>
<prover id="6" name="CVC4" version="1.8" timelimit="10" steplimit="0" memlimit="6000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="BinTreeModuleTupl.ml"/>
<theory name="BinTreeModuleTupl" proved="true">
 <goal name="BinTree.occ_nonneg&#39;vc" expl="VC for occ_nonneg" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="45"/></proof>
 </goal>
 <goal name="BinTree.height_nonneg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="height_nonneg.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="t">
   <goal name="height_nonneg.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="51"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.height&#39;vc" expl="VC for height" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="51"/></proof>
 </goal>
 <goal name="BinTree.occ_uniq2&#39;vc" expl="VC for occ_uniq2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="occ_uniq2&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="occ_uniq2&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="occ_uniq2&#39;vc.1.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.1.0.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
    </goal>
    <goal name="occ_uniq2&#39;vc.1.0.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="occ_uniq2&#39;vc.1.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.1.1.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
    <goal name="occ_uniq2&#39;vc.1.1.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="occ_uniq2&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="occ_uniq2&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="occ_uniq2&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="occ_uniq2&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="88"/></proof>
  </goal>
  <goal name="occ_uniq2&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="occ_uniq2&#39;vc.4.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.4.0.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="41"/></proof>
    </goal>
    <goal name="occ_uniq2&#39;vc.4.0.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="occ_uniq2&#39;vc.4.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.4.1.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
    <goal name="occ_uniq2&#39;vc.4.1.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="occ_uniq2&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="occ_uniq2&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
   <goal name="occ_uniq2&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="occ_uniq2&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="occ_uniq2&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="occ_uniq2&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="79"/></proof>
   </goal>
   <goal name="occ_uniq2&#39;vc.6.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="304"/></proof>
   </goal>
   <goal name="occ_uniq2&#39;vc.6.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.6.3.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="203"/></proof>
    </goal>
    <goal name="occ_uniq2&#39;vc.6.3.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="469"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="occ_uniq2&#39;vc.6.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="occ_uniq2&#39;vc.6.4.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="526"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="occ_uniq2&#39;vc.6.5" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.57" steps="5557"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.create&#39;vc" expl="VC for create" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="207"/></proof>
     </goal>
     <goal name="create&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.28" steps="3631"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.0.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.0.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="252"/></proof>
     </goal>
     <goal name="create&#39;vc.0.0.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.09" steps="679"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="create&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="create&#39;vc.0.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="60"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.0.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.0.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.06" steps="437"/></proof>
     </goal>
     <goal name="create&#39;vc.0.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.08" steps="635"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="create&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="75"/></proof>
     </goal>
     <goal name="create&#39;vc.1.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="77"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.1.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.1.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="79"/></proof>
     </goal>
     <goal name="create&#39;vc.1.0.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="create&#39;vc.1.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.1.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.1.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
     </goal>
     <goal name="create&#39;vc.1.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="78"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.1.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.1.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="77"/></proof>
     </goal>
     <goal name="create&#39;vc.1.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="67"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="create&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="63"/></proof>
     </goal>
     <goal name="create&#39;vc.2.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="200"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.2.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.2.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="219"/></proof>
     </goal>
     <goal name="create&#39;vc.2.0.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="219"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="create&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.2.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.2.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="create&#39;vc.2.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="66"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.2.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.2.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="204"/></proof>
     </goal>
     <goal name="create&#39;vc.2.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="226"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="create&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="66"/></proof>
     </goal>
     <goal name="create&#39;vc.3.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.3.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.3.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="68"/></proof>
     </goal>
     <goal name="create&#39;vc.3.0.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="57"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="create&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="create&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
     </goal>
     <goal name="create&#39;vc.3.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="68"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="create&#39;vc.3.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="create&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="67"/></proof>
     </goal>
     <goal name="create&#39;vc.3.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="57"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.bal&#39;vc" expl="VC for bal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bal&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.54" steps="7419"/></proof>
  </goal>
  <goal name="bal&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
  </goal>
  <goal name="bal&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
  </goal>
  <goal name="bal&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="bal&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="bal&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.5.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.5.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="207"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.5.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.5.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
    </goal>
    <goal name="bal&#39;vc.5.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="259"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="1336"/></proof>
  </goal>
  <goal name="bal&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="bal&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="308"/></proof>
  </goal>
  <goal name="bal&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
  </goal>
  <goal name="bal&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="bal&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.11.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.11.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="632"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.11.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.11.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="82"/></proof>
    </goal>
    <goal name="bal&#39;vc.11.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="582"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="224"/></proof>
  </goal>
  <goal name="bal&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.64" steps="7552"/></proof>
  </goal>
  <goal name="bal&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="1087"/></proof>
  </goal>
  <goal name="bal&#39;vc.15" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="bal&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="bal&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="bal&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.18.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.18.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.18.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="382"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.18.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.18.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="70"/></proof>
    </goal>
    <goal name="bal&#39;vc.18.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.09" steps="573"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.01" steps="9610"/></proof>
  </goal>
  <goal name="bal&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="bal&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="594"/></proof>
  </goal>
  <goal name="bal&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="bal&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="bal&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="733"/></proof>
  </goal>
  <goal name="bal&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="250"/></proof>
  </goal>
  <goal name="bal&#39;vc.26" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.26.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.26.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.26.0.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H19,H18,H17,H16,H15,H11,H9,H8,H7,H6,H5,H4,H3,H2,H1,H13,H12,H14">
     <goal name="bal&#39;vc.26.0.1.0" expl="precondition" proved="true">
     <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="80"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.26.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.26.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="94"/></proof>
    </goal>
    <goal name="bal&#39;vc.26.1.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(compare x6 x &lt; 0)">
     <goal name="bal&#39;vc.26.1.1.0" expl="asserted formula" proved="true">
     <proof prover="6"><result status="valid" time="0.48" steps="36705"/></proof>
     </goal>
     <goal name="bal&#39;vc.26.1.1.1" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="46"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="973"/></proof>
  </goal>
  <goal name="bal&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="bal&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="bal&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.30.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.30.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.30.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.19" steps="1582"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.30.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.30.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="104"/></proof>
    </goal>
    <goal name="bal&#39;vc.30.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.36" steps="2807"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.31" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.31.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.31.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.31.0.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H22,H21,H20,H19,H18,H14,H12,H11,H9,H8,H7,H4,H3,H2,H1,H15,H17">
     <goal name="bal&#39;vc.31.0.1.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.09" steps="942"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.31.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.31.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="109"/></proof>
    </goal>
    <goal name="bal&#39;vc.31.1.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(compare x5 x2 &lt; 0)">
     <goal name="bal&#39;vc.31.1.1.0" expl="asserted formula" proved="true">
     <proof prover="6" timelimit="5"><result status="valid" time="0.52" steps="54126"/></proof>
     </goal>
     <goal name="bal&#39;vc.31.1.1.1" expl="precondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,occ_nonneg,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H21,H20,H19,H18,H17,H14,H12,H11,H10,H9,H8,H7,H5,H4,H3,H2,H1,H15,H16">
      <goal name="bal&#39;vc.31.1.1.1.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.03" steps="205"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.32" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.32.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.32.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.32.0.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,occ_uniq2,create&#39;spec,H23,H20,H15,H13,H12,H10,H9,H8,H7,H6,H5,H4,H3,H2,H1,H16,H18">
     <goal name="bal&#39;vc.32.0.1.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="184"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.32.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.32.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="109"/></proof>
    </goal>
    <goal name="bal&#39;vc.32.1.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),abs,min,max,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,([]),get,rev,append,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,same_location_eq,array&#39;invariant,H15,H12,H8,H6,H16">
     <goal name="bal&#39;vc.32.1.1.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.14" steps="1549"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.33" expl="precondition" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,mem2,height,bst,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,occ_nonneg,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H25,H24,H23,H22,H21,H20,H19,H18,H17,H16,H15,H14,H13,H12,H11,H10,H9,H8,H7,H6,H5,H4">
   <goal name="bal&#39;vc.33.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.34" expl="unreachable point" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.34.0" expl="unreachable point" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.34.0.0" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.34.0.1" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.34.1" expl="unreachable point" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.34.1.0" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
    </goal>
    <goal name="bal&#39;vc.34.1.1" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="53"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="bal&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="bal&#39;vc.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="bal&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="41"/></proof>
  </goal>
  <goal name="bal&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.39.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.39.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.39.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="66"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.39.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.39.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="238"/></proof>
    </goal>
    <goal name="bal&#39;vc.39.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="411"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.40" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="bal&#39;vc.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="816"/></proof>
  </goal>
  <goal name="bal&#39;vc.42" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="351"/></proof>
  </goal>
  <goal name="bal&#39;vc.43" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="bal&#39;vc.44" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="bal&#39;vc.45" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.45.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.45.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.45.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="85"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.45.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.45.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.09" steps="629"/></proof>
    </goal>
    <goal name="bal&#39;vc.45.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.10" steps="594"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.46" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.76" steps="8211"/></proof>
  </goal>
  <goal name="bal&#39;vc.47" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.47.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.47.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.47.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="89"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.47.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.47.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="416"/></proof>
    </goal>
    <goal name="bal&#39;vc.47.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="367"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.48" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="1300"/></proof>
  </goal>
  <goal name="bal&#39;vc.49" expl="unreachable point" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.49.0" expl="unreachable point" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.49.0.0" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.49.0.1" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="62"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.49.1" expl="unreachable point" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.49.1.0" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="52"/></proof>
    </goal>
    <goal name="bal&#39;vc.49.1.1" expl="unreachable point" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="53"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.50" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="bal&#39;vc.51" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="bal&#39;vc.52" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="327"/></proof>
  </goal>
  <goal name="bal&#39;vc.53" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.82" steps="8312"/></proof>
  </goal>
  <goal name="bal&#39;vc.54" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="205"/></proof>
  </goal>
  <goal name="bal&#39;vc.55" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="692"/></proof>
  </goal>
  <goal name="bal&#39;vc.56" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="bal&#39;vc.57" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="bal&#39;vc.58" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.58.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.58.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.58.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="91"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.58.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.58.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.16" steps="1187"/></proof>
    </goal>
    <goal name="bal&#39;vc.58.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.21" steps="1457"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.59" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="70"/></proof>
  </goal>
  <goal name="bal&#39;vc.60" expl="precondition" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H20,H19,H18,H17,H15,H14,H13,H12,H11,H9,H8,H7,H6,H5,H4,H3,H2,H1">
   <goal name="bal&#39;vc.60.0" expl="precondition" proved="true">
   <proof prover="6" timelimit="1"><result status="valid" time="0.05" steps="6111"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.61" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.25" steps="1961"/></proof>
  </goal>
  <goal name="bal&#39;vc.62" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="bal&#39;vc.63" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="bal&#39;vc.64" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.64.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.64.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.64.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="107"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.64.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.64.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.12" steps="941"/></proof>
    </goal>
    <goal name="bal&#39;vc.64.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.31" steps="2396"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.65" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.65.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.65.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.65.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="112"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.65.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.65.1.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.69" steps="49892"/></proof>
    </goal>
    <goal name="bal&#39;vc.65.1.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),min,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,is_none,rev_append1,fst,snd,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,Length_nonnegative,Length_nil,Append_l_nil,mem_append,reverse_append,reverse_cons,reverse_mem,Reverse_length,rev_append_append_l,rev_append_def,([&lt;-])&#39;spec,make_spec,cmp_eq,is_pre_order1,height_nonneg,create&#39;spec,H21,H18,H12,H11,H9,H7,H16,H17">
     <goal name="bal&#39;vc.65.1.1.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.35" steps="2857"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.66" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.66.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.66.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
    <goal name="bal&#39;vc.66.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="112"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.66.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.66.1.0" expl="precondition" proved="true">
    <transf name="inline_all" proved="true" >
     <goal name="bal&#39;vc.66.1.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="4.49" steps="571454"/></proof>
     <transf name="remove" proved="true" arg1="length1,mem,(++),reverse,rev_append,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,non_neg_max_array_length,is_pre_order1,occ_uniq2,create&#39;spec,create&#39;def,H25,H23,H22,H21,H20,H19,H16,H15,H13,H12,H10,H9,H8,H7,H6,H5,H4,H3,H2,H1,H18,H17">
      <goal name="bal&#39;vc.66.1.0.0.0" expl="precondition" proved="true">
      <proof prover="6" timelimit="1"><result status="valid" time="0.19" steps="21300"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.66.1.1" expl="precondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),rev,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,create&#39;spec,H24,H21,H19,H12,H8,H7,H6,H5">
     <goal name="bal&#39;vc.66.1.1.0" expl="precondition" proved="true">
     <proof prover="1"><result status="valid" time="0.42" steps="1065149"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.67" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.55" steps="3906"/></proof>
  </goal>
  <goal name="bal&#39;vc.68" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.68.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.68.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.68.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="46"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.68.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.0.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="46"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.68.0.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="44"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.68.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.68.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.68.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="50"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.68.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.68.2.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.2.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.2.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.68.2.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.2.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.2.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="46"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.68.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.68.3.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.3.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.3.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="54"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.68.3.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.3.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="54"/></proof>
     </goal>
     <goal name="bal&#39;vc.68.3.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.68.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.68.4.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.4.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.4.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="236"/></proof>
      </goal>
      <goal name="bal&#39;vc.68.4.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.08" steps="549"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.68.4.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.4.0.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.05" steps="317"/></proof>
      </goal>
      <goal name="bal&#39;vc.68.4.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.10" steps="758"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.68.4.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.68.4.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.4.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
      </goal>
      <goal name="bal&#39;vc.68.4.1.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.03" steps="80"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.68.4.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.68.4.1.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.07" steps="548"/></proof>
      </goal>
      <goal name="bal&#39;vc.68.4.1.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.10" steps="728"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.69" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.69.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="1.98" steps="58052"/></proof>
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,non_neg_max_array_length,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,H20,H19,H18,H17,H15,H14,H13,H1,H11,H10,H8,H7,H6,H5,H2">
    <goal name="bal&#39;vc.69.0.0" expl="postcondition" proved="true">
    <proof prover="6" timelimit="1"><result status="valid" time="0.12" steps="11573"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.69.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.69.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.69.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.69.1.0.1" expl="postcondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,mem2,height,bst,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,create&#39;spec,create&#39;def,H25,H24,H23,H22,H21,H17,H1,H18,H15,H14,H12,H11,H10,H7,H6,H5,H2,H20">
      <goal name="bal&#39;vc.69.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="350"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.69.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.69.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="141"/></proof>
     </goal>
     <goal name="bal&#39;vc.69.1.1.1" expl="postcondition" proved="true">
     <transf name="inline_all" proved="true" >
      <goal name="bal&#39;vc.69.1.1.1.0" expl="postcondition" proved="true">
      <proof prover="6"><result status="valid" time="0.92" steps="59048"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.69.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.69.2.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.69.2.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.69.2.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="120"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.69.2.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="1.17" steps="66516"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.69.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.69.3.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.69.3.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.69.3.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="145"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.69.3.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.69.3.1.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.52" steps="37897"/></proof>
     </goal>
     <goal name="bal&#39;vc.69.3.1.1" expl="postcondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,height_nonneg,create&#39;spec,H26,H24,H18,H17,H1,H15,H14,H11,H10,H8,H7,H6,H5,H2,H19,H20">
      <goal name="bal&#39;vc.69.3.1.1.0" expl="postcondition" proved="true">
      <proof prover="6" timelimit="1"><result status="valid" time="0.18" steps="23435"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.69.4" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.70" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.70.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.70.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.0.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.16" steps="1228"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.70.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="104"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.0.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.17" steps="1213"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.70.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.70.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.1.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="923"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.70.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="128"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.15" steps="917"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.70.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.70.2.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.2.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.2.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="108"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.70.2.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.2.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="887"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.2.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.15" steps="1000"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.70.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.70.3.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.3.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.3.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="131"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.70.3.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.3.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.14" steps="930"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.3.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.15" steps="868"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.70.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.70.4.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.4.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="194"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.4.0.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="215"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.70.4.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.70.4.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="217"/></proof>
     </goal>
     <goal name="bal&#39;vc.70.4.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="235"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.71" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bal&#39;vc.71.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.71.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.09" steps="592"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.0.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="109"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.10" steps="587"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.0.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.1.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.13" steps="900"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.0.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="133"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.1.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.44" steps="3019"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.0.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.0.2.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.2.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.2.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="114"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.0.2.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.2.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.08" steps="585"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.2.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.14" steps="924"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.0.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.0.3.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.3.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.3.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="137"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.0.3.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.3.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.12" steps="893"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.0.3.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.56" steps="6117"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.0.4" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.0.4.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.4.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.0.4.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.0.4.0.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="102"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="bal&#39;vc.71.0.4.0.1" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.0.4.0.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="103"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.0.4.0.1.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.0.4.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.0.4.1.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.0.4.1.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.0.4.1.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="107"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="bal&#39;vc.71.0.4.1.1" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.0.4.1.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="105"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.0.4.1.1.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="93"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bal&#39;vc.71.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bal&#39;vc.71.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.1.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.16" steps="1169"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.1.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="109"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.16" steps="991"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.1.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.1.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.33" steps="2482"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.1.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.1.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="133"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.1.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.59" steps="4639"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.1.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.1.2.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.2.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.2.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="114"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.1.2.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.2.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.14" steps="1022"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.2.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.16" steps="1087"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.1.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.1.3.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.3.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.3.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="137"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.1.3.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.3.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.38" steps="3120"/></proof>
      </goal>
      <goal name="bal&#39;vc.71.1.3.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.37" steps="2271"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bal&#39;vc.71.1.4" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bal&#39;vc.71.1.4.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.4.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.1.4.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="89"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.1.4.0.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="102"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="bal&#39;vc.71.1.4.0.1" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.1.4.0.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="103"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.1.4.0.1.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="88"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="bal&#39;vc.71.1.4.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="bal&#39;vc.71.1.4.1.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.1.4.1.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.1.4.1.0.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="107"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="bal&#39;vc.71.1.4.1.1" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="bal&#39;vc.71.1.4.1.1.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.02" steps="105"/></proof>
       </goal>
       <goal name="bal&#39;vc.71.1.4.1.1.1" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="93"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bal&#39;vc.72" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.82" steps="7285"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.min_tree&#39;vc" expl="VC for min_tree" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="min_tree&#39;vc.0" expl="unreachable point" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_tree&#39;vc.0.0" expl="unreachable point" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_tree&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_tree&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="min_tree&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_tree&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_tree&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="44"/></proof>
   </goal>
   <goal name="min_tree&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_tree&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_tree&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.39" steps="5256"/></proof>
   </goal>
   <goal name="min_tree&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.52" steps="17036"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.is_minimum_min&#39;vc" expl="VC for is_minimum_min" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="207"/></proof>
 </goal>
 <goal name="BinTree.remove_min_elt&#39;vc" expl="VC for remove_min_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_min_elt&#39;vc.0" expl="unreachable point" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.0.0" expl="unreachable point" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="remove_min_elt&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="remove_min_elt&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="287"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="690"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="175"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="477"/></proof>
  </goal>
  <goal name="remove_min_elt&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="remove_min_elt&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_min_elt&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,bst_no_height,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,H4,H1,H2">
     <goal name="remove_min_elt&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="1"><result status="valid" time="0.23" steps="4900"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="remove_min_elt&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_min_elt&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="inline_all" proved="true" >
     <goal name="remove_min_elt&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="1.47" steps="85269"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.22" steps="2532"/></proof>
   </goal>
   <goal name="remove_min_elt&#39;vc.12.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_min_elt&#39;vc.12.1.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.64" steps="45862"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_min_elt&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_min_elt&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(height r - height param &gt;= -1)">
    <goal name="remove_min_elt&#39;vc.13.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove_min_elt&#39;vc.13.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
     </goal>
     <goal name="remove_min_elt&#39;vc.13.0.0.1" expl="asserted formula" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),min,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,occ_nonneg,height_nonneg,occ_uniq2,create&#39;spec,min_tree&#39;spec,is_minimum_min,H15,H2,H1,H,H8,H9,H7,H6,H4">
      <goal name="remove_min_elt&#39;vc.13.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.10" steps="958"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="remove_min_elt&#39;vc.13.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove_min_elt&#39;vc.13.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(height r - height param &lt;= 0)">
    <goal name="remove_min_elt&#39;vc.13.1.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove_min_elt&#39;vc.13.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
     </goal>
     <goal name="remove_min_elt&#39;vc.13.1.0.1" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.18" steps="1270"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove_min_elt&#39;vc.13.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.add_min_element&#39;vc" expl="VC for add_min_element" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_min_element&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="add_min_element&#39;vc.6.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="670"/></proof>
  </goal>
  <goal name="add_min_element&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="add_min_element&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="158"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.45" steps="4537"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="247"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="add_min_element&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="50"/></proof>
   </goal>
   <goal name="add_min_element&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="345"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.16.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="add_min_element&#39;vc.16.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="261"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_min_element&#39;vc.17" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_min_element&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add_min_element&#39;vc.17.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
    </goal>
    <goal name="add_min_element&#39;vc.17.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add_min_element&#39;vc.17.0.1.0" expl="postcondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),get1,set,([]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,([]),(%),rev,append,rev_append,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,is_nil&#39;spec,Length_nonnegative,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,is_pre_order1,height_nonneg,occ_uniq2,create&#39;def,min_tree&#39;spec,is_minimum_min,H2,H1,H,H11,H8,H9,H7,H4">
      <goal name="add_min_element&#39;vc.17.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="0" timelimit="1"><result status="valid" time="0.62" steps="4731"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="add_min_element&#39;vc.17.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add_min_element&#39;vc.17.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
    </goal>
    <goal name="add_min_element&#39;vc.17.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.10" steps="802"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.merge&#39;vc" expl="VC for merge" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="merge&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="merge&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="51"/></proof>
  </goal>
  <goal name="merge&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
   </goal>
   <goal name="merge&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
   <goal name="merge&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="193"/></proof>
  </goal>
  <goal name="merge&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="230"/></proof>
  </goal>
  <goal name="merge&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="879"/></proof>
  </goal>
  <goal name="merge&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="541"/></proof>
  </goal>
  <goal name="merge&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="merge&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="116"/></proof>
   </goal>
   <goal name="merge&#39;vc.8.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="120"/></proof>
   </goal>
   <goal name="merge&#39;vc.8.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.39" steps="3241"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="55"/></proof>
   </goal>
   <goal name="merge&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
   <goal name="merge&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="58"/></proof>
   </goal>
   <goal name="merge&#39;vc.9.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.16" steps="1149"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="merge&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="merge&#39;vc.10.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="merge&#39;vc.10.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="merge&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="merge&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="49"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="102"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="107"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.0.3" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.52" steps="38755"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="merge&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="merge&#39;vc.11.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="49"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="105"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.1.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="107"/></proof>
    </goal>
    <goal name="merge&#39;vc.11.1.3" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="425"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.mem&#39;vc" expl="VC for mem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mem&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mem&#39;vc.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.0.0.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
    </goal>
    <goal name="mem&#39;vc.0.0.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mem&#39;vc.0.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.0.1.0" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
    </goal>
    <goal name="mem&#39;vc.0.1.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="mem&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mem&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="mem&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mem&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mem&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mem&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="183"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mem&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="285"/></proof>
    </goal>
    <goal name="mem&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mem&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
    <goal name="mem&#39;vc.2.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mem&#39;vc.2.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.11" steps="806"/></proof>
     </goal>
     <goal name="mem&#39;vc.2.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.05" steps="178"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mem&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
   <goal name="add&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="add&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="205"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="306"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="165"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="311"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.7" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.7.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
   <goal name="add&#39;vc.7.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
   </goal>
   <goal name="add&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="208"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="166"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="356"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="314"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
   </goal>
   <goal name="add&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="add&#39;vc.14.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.14.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="add&#39;vc.14.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="410"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.14.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.14.3.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="add&#39;vc.14.3.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="389"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
   </goal>
   <goal name="add&#39;vc.15.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.15.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.15.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.15.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
    </goal>
    <goal name="add&#39;vc.15.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="207"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.15.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="212"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.16.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="281"/></proof>
   </goal>
   <goal name="add&#39;vc.16.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="add&#39;vc.16.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.16.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="33"/></proof>
    </goal>
    <goal name="add&#39;vc.16.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.16.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.16.3.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="33"/></proof>
    </goal>
    <goal name="add&#39;vc.16.3.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.17" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.17.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
    </goal>
    <goal name="add&#39;vc.17.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
    <goal name="add&#39;vc.17.0.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.17.0.2.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
     </goal>
     <goal name="add&#39;vc.17.0.2.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.18" steps="1561"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.17.0.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.17.0.3.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
     </goal>
     <goal name="add&#39;vc.17.0.3.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.15" steps="1227"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.17.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="add&#39;vc.17.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
    </goal>
    <goal name="add&#39;vc.17.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
    </goal>
    <goal name="add&#39;vc.17.1.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.17.1.2.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
     </goal>
     <goal name="add&#39;vc.17.1.2.1" expl="postcondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),min,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,is_pre_order1,occ_nonneg,height_nonneg,occ_uniq2,create&#39;def,min_tree&#39;spec,is_minimum_min,H2,H1,H,H16,H13,H11,H9,H8,H7,H6,H4">
      <goal name="add&#39;vc.17.1.2.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.42" steps="4184"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.17.1.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.17.1.3.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
     </goal>
     <goal name="add&#39;vc.17.1.3.1" expl="postcondition" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),min,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,occ_nonneg,height_nonneg,occ_uniq2,create&#39;def,min_tree&#39;spec,is_minimum_min,H2,H1,H,H13,H11,H9,H8,H7,H6,H4">
      <goal name="add&#39;vc.17.1.3.1.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.33" steps="3020"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.remove&#39;vc" expl="VC for remove" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="448"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="394"/></proof>
   </goal>
   <goal name="remove&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
   <goal name="remove&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="remove&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="remove&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="44"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="211"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="304"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="165"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="308"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.11" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.11.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
   <goal name="remove&#39;vc.11.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="remove&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="44"/></proof>
   </goal>
   <goal name="remove&#39;vc.13.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="213"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="166"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.16.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="506"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="313"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="remove&#39;vc.18.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="171"/></proof>
   </goal>
   <goal name="remove&#39;vc.18.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.18.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
    </goal>
    <goal name="remove&#39;vc.18.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="406"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.18.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="390"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.19" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.19.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="41"/></proof>
   </goal>
   <goal name="remove&#39;vc.19.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="241"/></proof>
   </goal>
   <goal name="remove&#39;vc.19.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.19.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.29" steps="2740"/></proof>
    </goal>
    <goal name="remove&#39;vc.19.2.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.32" steps="26960"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.19.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.11" steps="771"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.20.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="remove&#39;vc.20.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="remove&#39;vc.20.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.20.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
    </goal>
    <goal name="remove&#39;vc.20.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="43"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.20.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.21" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.21.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove&#39;vc.21.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.21.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="61"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.0.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove&#39;vc.21.0.2.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="remove&#39;vc.21.0.2.0.0" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="remove&#39;vc.21.0.2.1" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="remove&#39;vc.21.0.2.1.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="remove&#39;vc.21.0.2.1.0.0" expl="postcondition" proved="true">
       <transf name="inline_goal" proved="true" >
        <goal name="remove&#39;vc.21.0.2.1.0.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="valid" time="1.96" steps="18695"/></proof>
        <transf name="remove" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,Min_r,Min_assoc,Max_assoc,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_inf,Mod_inf,Div_mult,Length_nonnegative,Append_assoc,Append_l_nil,Append_length,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,array&#39;invariant,create&#39;def,min_tree&#39;spec,is_minimum_min,H16,H15,H13,H10,H9,H8,H4,H3,Mod_bound,is_nil&#39;spec1,is_nil&#39;spec,Length_nil1,Length_nil,mem_append2,mem_append1,mem_append,is_none&#39;spec1,is_none&#39;spec,([&lt;-])&#39;spec1,([&lt;-])&#39;spec,make_spec1,make_spec,reverse_mem1,reverse_mem,occ_uniq21,occ_uniq2,create&#39;spec3,create&#39;spec2,create&#39;spec1">
         <goal name="remove&#39;vc.21.0.2.1.0.0.0.0" expl="postcondition">
         <proof prover="0" timelimit="1"><undone/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.21.0.3" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="3.04" steps="29787"/></proof>
    <transf name="remove" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,occ,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Mod_inf,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,create&#39;def,min_tree&#39;spec,is_minimum_min,H10,H9,H7,H6">
     <goal name="remove&#39;vc.21.0.3.0" expl="postcondition">
     <proof prover="0" timelimit="1"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.21.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.21.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove&#39;vc.21.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.21.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="61"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.1.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.20" steps="1625"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.1.3" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.26" steps="2091"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="BinTree.subset&#39;vc" expl="VC for subset" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="subset&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="139"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
   </goal>
   <goal name="subset&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="36"/></proof>
   </goal>
   <goal name="subset&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="165"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.26" steps="1769"/></proof>
   </goal>
   <goal name="subset&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="182"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
   <goal name="subset&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.8" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.8.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="166"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.70" steps="6444"/></proof>
   </goal>
   <goal name="subset&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.10" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.10.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="183"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
   </goal>
   <goal name="subset&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="subset&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="subset&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="subset&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="45"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.0.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="103"/></proof>
    </goal>
    <goal name="subset&#39;vc.12.0.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.0.3.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.32" steps="27793"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.0.4" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.0.4.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="subset&#39;vc.12.0.4.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="subset&#39;vc.12.0.4.0.0.0" expl="postcondition" proved="true">
       <proof prover="6"><result status="valid" time="1.21" steps="37211"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.0.5" expl="postcondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="subset&#39;vc.12.0.5.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="subset&#39;vc.12.0.5.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="subset&#39;vc.12.0.5.0.0.0" expl="postcondition" proved="true">
       <transf name="inline_goal" proved="true" >
        <goal name="subset&#39;vc.12.0.5.0.0.0.0" expl="postcondition" proved="true">
        <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,Length_nonnegative,Append_assoc,Append_l_nil,Append_length,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,create&#39;def,min_tree&#39;spec,is_minimum_min,H8,H7,H4,H3,Abs_le2,Abs_le1,Abs_le,Div_bound1,Div_bound,Mod_bound1,Mod_bound,is_nil&#39;spec1,is_nil&#39;spec,Length_nil1,Length_nil,mem_append2,mem_append1,mem_append,is_none&#39;spec1,is_none&#39;spec,([&lt;-])&#39;spec1,([&lt;-])&#39;spec,make_spec1,make_spec,cmp_eq1,cmp_eq,reverse_mem1,reverse_mem,occ_uniq21,occ_uniq2,create&#39;spec3,create&#39;spec2,create&#39;spec1,create&#39;spec">
         <goal name="subset&#39;vc.12.0.5.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="6" timelimit="1"><result status="valid" time="0.09" steps="6969"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="subset&#39;vc.12.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="subset&#39;vc.12.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.1.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.1.1" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(mem2 w2 t1)">
     <goal name="subset&#39;vc.12.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="113"/></proof>
     </goal>
     <goal name="subset&#39;vc.12.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="217"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.1.2" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.1.2.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.1.3" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall y. y &lt;&gt; x6 -&gt; mem2 y t2 -&gt; mem2 y x7 \/ mem2 y x5)">
     <goal name="subset&#39;vc.12.1.3.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="180"/></proof>
     </goal>
     <goal name="subset&#39;vc.12.1.3.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.84" steps="7176"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.1.4" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.1.4.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(subset (Node x3 x2 Empty 0) x7)">
      <goal name="subset&#39;vc.12.1.4.0.0" expl="true case (postcondition)" proved="true">
      <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,is_minimum_min,H7,H6,H5,H3,H2">
       <goal name="subset&#39;vc.12.1.4.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="74"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="subset&#39;vc.12.1.4.0.1" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(exists x. mem2 x (Node x3 x2 Empty 0) /\ not mem2 x x7)">
       <goal name="subset&#39;vc.12.1.4.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="135"/></proof>
       </goal>
       <goal name="subset&#39;vc.12.1.4.0.1.1" expl="false case (postcondition)" proved="true">
       <transf name="introduce_exists" proved="true" >
        <goal name="subset&#39;vc.12.1.4.0.1.1.0" expl="false case (postcondition)" proved="true">
        <transf name="case" proved="true" arg1="(x = x3)">
         <goal name="subset&#39;vc.12.1.4.0.1.1.0.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(not mem2 x3 x2)">
          <goal name="subset&#39;vc.12.1.4.0.1.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.06" steps="312"/></proof>
          </goal>
          <goal name="subset&#39;vc.12.1.4.0.1.1.0.0.1" expl="false case (true case. postcondition)" proved="true">
          <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,bst,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,is_minimum_min,H3,H1,h3,h">
           <goal name="subset&#39;vc.12.1.4.0.1.1.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
           <proof prover="0"><result status="valid" time="1.09" steps="19635"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="subset&#39;vc.12.1.4.0.1.1.0.1" expl="false case (postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(mem2 x x4)">
          <goal name="subset&#39;vc.12.1.4.0.1.1.0.1.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.06" steps="309"/></proof>
          </goal>
          <goal name="subset&#39;vc.12.1.4.0.1.1.0.1.1" expl="false case (postcondition)" proved="true">
          <transf name="assert" proved="true" arg1="(not mem2 x x6)">
           <goal name="subset&#39;vc.12.1.4.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.20" steps="1456"/></proof>
           </goal>
           <goal name="subset&#39;vc.12.1.4.0.1.1.0.1.1.1" expl="false case (postcondition)" proved="true">
           <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,is_nil&#39;spec,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,is_minimum_min,H6,H3,H1,h4,h2">
            <goal name="subset&#39;vc.12.1.4.0.1.1.0.1.1.1.0" expl="false case (postcondition)" proved="true">
            <proof prover="1"><result status="valid" time="0.05" steps="101641"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="subset&#39;vc.12.1.5" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="subset&#39;vc.12.1.5.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(subset (Node Empty x2 x1 0) x5)">
      <goal name="subset&#39;vc.12.1.5.0.0" expl="true case (postcondition)" proved="true">
      <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,is_pre_order2,rev,append,rev_append,height,bst,bst_no_height,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,is_pre_order,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,is_minimum_min,H7,H6,H5,H3,H2">
       <goal name="subset&#39;vc.12.1.5.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="0" timelimit="1"><result status="valid" time="0.02" steps="72"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="subset&#39;vc.12.1.5.0.1" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(exists x. mem2 x (Node Empty x2 x1 0) /\ not mem2 x x5)">
       <goal name="subset&#39;vc.12.1.5.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.04" steps="135"/></proof>
       </goal>
       <goal name="subset&#39;vc.12.1.5.0.1.1" expl="false case (postcondition)" proved="true">
       <transf name="introduce_exists" proved="true" >
        <goal name="subset&#39;vc.12.1.5.0.1.1.0" expl="false case (postcondition)" proved="true">
        <transf name="case" proved="true" arg1="(x = x3)">
         <goal name="subset&#39;vc.12.1.5.0.1.1.0.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(not subset t1 t2)">
          <goal name="subset&#39;vc.12.1.5.0.1.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get1,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length1,mem,is_none,(++),reverse,rev_append1,fst,snd,([]),(%),get,rev,append,rev_append,height,bst,is_minimum,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,same_location_eq,array&#39;invariant,([&lt;-])&#39;spec,make_spec,cmp_eq,non_neg_max_array_length,is_pre_order1,height_nonneg,occ_uniq2,create&#39;spec,create&#39;def,min_tree&#39;spec,is_minimum_min,H,H1,h3">
           <goal name="subset&#39;vc.12.1.5.0.1.1.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="1.13" steps="21798"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="subset&#39;vc.12.1.5.0.1.1.0.0.1" expl="false case (true case. postcondition)" proved="true">
          <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="subset&#39;vc.12.1.5.0.1.1.0.1" expl="false case (postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(mem2 x x2)">
          <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.06" steps="333"/></proof>
          </goal>
          <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.1" expl="false case (postcondition)" proved="true">
          <transf name="assert" proved="true" arg1="(not mem2 x x8)">
           <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.16" steps="1192"/></proof>
           </goal>
           <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.1.1" expl="false case (postcondition)" proved="true">
           <transf name="assert" proved="true" arg1="(mem2 x t1)">
            <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.06" steps="332"/></proof>
            </goal>
            <goal name="subset&#39;vc.12.1.5.0.1.1.0.1.1.1.1" expl="false case (postcondition)" proved="true">
            <proof prover="0"><result status="valid" time="1.06" steps="10954"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
